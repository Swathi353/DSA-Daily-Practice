public class SearchInSortedMatrix {
    // way - using special cell matrix(0,m-1)
    public static boolean StaircaseSearch(int matrix[][], int key) {
        int row = 0;
        int col = matrix[0].length - 1;
        while (row < matrix.length && col >= 0) {
            if (key == matrix[row][col]) {
                System.out.println("Key found at (" + row + "," + col + ")");
                return true;
            } else if (key < matrix[row][col]) {
                col--;
            } else {
                row++;
            }
        }
        System.out.println("Key not found");
        return false;
    }

    // way2- using special cell matrix(n-1,0)
    public static boolean StaircaseSearch_way2(int matrix[][], int key) {
        int row = matrix.length - 1;
        int col = 0;
        while (row >= 0 && col < matrix.length) {
            if (key == matrix[row][col]) {
                System.out.println("key found at (" + row + "," + col + ")");
                return true;
            } else if (key < matrix[row][col]) {
                row--;
            } else {
                col++;
            }

        }
        System.out.println("key not found");
        return false;
    }

    public static void main(String args[]) {
        int key = 39;
        int key1 = 20;
        int matrix[][] = {
                { 10, 20, 30, 40 },
                { 5, 25, 35, 45 },
                { 27, 29, 37, 48 },
                { 32, 33, 39, 50 }
        };
        StaircaseSearch(matrix, key);
        StaircaseSearch_way2(matrix, key1);
    }
}
